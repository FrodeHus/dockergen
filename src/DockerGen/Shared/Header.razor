@using DockerGen.Features.Container.Store
@using DockerGen.Infrastructure
@inherits FluxorComponent
@inject IDispatcher Dispatcher
@inject IState<ContainerState> State
@inject ApiService ApiClient
@inject ClipboardService Clipboard
@inject IMatToaster ToastService

<MatAppBar Fixed="true">
    <MatAppBarRow>
        <MatAppBarSection>
            <MatIconButton Icon="menu"></MatIconButton>
            <MatAppBarTitle>DockerGen - Visual editor for Dockerfiles</MatAppBarTitle>
        </MatAppBarSection>
        <MatAppBarSection Align="@MatAppBarSectionAlign.End">
            <LoginDisplay />
            <MatIconButton Icon="share" OnClick="CreateQuickShareLink"></MatIconButton>
            <MatIconButton Icon="file_copy" OnClick="CopyDockerfileToClipboard"></MatIconButton>
            <MatIconButton Icon="clear" OnClick="(() => Dispatcher.Dispatch(new ContainerClearStateAction()))"></MatIconButton>
            <MatIconButton Link="https://github.com/frodehus/dockergen">
                <i class="fa fa-github" aria-hidden="true"></i>
            </MatIconButton>
        </MatAppBarSection>
    </MatAppBarRow>
</MatAppBar>


@code {
    private async Task CopyDockerfileToClipboard()
    {
        try
        {
            var dockerfile = State.Value.Container.Compile();
            await Clipboard.WriteTextAsync(dockerfile);
            ToastService.Add("Dockerfile was copied to your clipboard!", MatToastType.Success);
        }
        catch
        {
            ToastService.Add("Something went wrong when trying to access clipboard", MatToastType.Danger);
        }
    }

    private async Task CreateQuickShareLink()
    {
        var url = await ApiClient.CreateQuickShareLinkAsync(State.Value.Container);

        if (url != null)
        {
            ToastService.Add("Quickshare link has been added to your clipboard: " + url, MatToastType.Success);
            await Clipboard.WriteTextAsync(url);
        }
        else
        {
            ToastService.Add("Something went wrong when trying to create a quickshare link", MatToastType.Danger);
        }
    }

}