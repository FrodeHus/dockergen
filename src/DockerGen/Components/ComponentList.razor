@using DockerGen.Container
@using System.Reflection
<header class="title">
    Container components
</header>

<ul class="component-list">
    @foreach (var component in AvailableComponents)
    {
        <InstructionComponent Title="@component.DisplayName" OnDrag="StartDrag" CssClass="component" Instruction="component"></InstructionComponent>
    }
</ul>

@code {
    [CascadingParameter]
    public Pages.Index ContainerEditor { get; set; }

    private List<Instruction> AvailableComponents { get; set; }

    protected override void OnInitialized()
    {
        var instructions = Assembly.GetExecutingAssembly().GetTypes().Where(type => typeof(Instruction).IsAssignableFrom(type) && !type.IsInterface && !type.IsAbstract).Select(t => (Instruction)Activator.CreateInstance(t));
        AvailableComponents = instructions.ToList();
    }
    private void StartDrag(Instruction instruction)
    {
        var instance = (Instruction)Activator.CreateInstance(instruction.GetType());
        ContainerEditor.CurrentInstruction = instance;
    }
}